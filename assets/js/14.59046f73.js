(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{376:function(t,a,e){"use strict";e.r(a);var s=e(26),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"字节跳动前端面试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字节跳动前端面试"}},[t._v("#")]),t._v(" 字节跳动前端面试")]),t._v(" "),e("h2",{attrs:{id:"一面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一面"}},[t._v("#")]),t._v(" 一面：")]),t._v(" "),e("h3",{attrs:{id:"js-基础数据类型有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-基础数据类型有哪些"}},[t._v("#")]),t._v(" JS 基础数据类型有哪些?")]),t._v(" "),e("p",[t._v("Number、String、BigInt、Boolean 、Undefined、Null、Symbol")]),t._v(" "),e("p",[t._v("补充复杂类型：Object")]),t._v(" "),e("h3",{attrs:{id:"this-的指向"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#this-的指向"}},[t._v("#")]),t._v(" this 的指向")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("function a(){console.log(this)} a()  // Window\nvar b = { a: a} b.a() // b\n")])])]),e("h3",{attrs:{id:"new-a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#new-a"}},[t._v("#")]),t._v(" new A()")]),t._v(" "),e("ol",[e("li",[t._v("在内存中创建一个新的空对象")]),t._v(" "),e("li",[t._v("让 this 指向这个空对象")]),t._v(" "),e("li",[t._v("执行构造函数里面的代码(给这个新对象添加属性和方法)")]),t._v(" "),e("li",[t._v("返回这个新对象")])]),t._v(" "),e("h3",{attrs:{id:"实现下二叉树的深度遍历-筛选不重复节点的名字"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现下二叉树的深度遍历-筛选不重复节点的名字"}},[t._v("#")]),t._v(" 实现下二叉树的深度遍历，筛选不重复节点的名字")]),t._v(" "),e("p",[t._v("深度优先")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("function mapDom(tree) {\n  let visited = [];\n\n  let traverse = function (node) {\n    if (node.left) traverse(node.left);\n    if (!visited.contains(node)) {\n      visited.push(node);\n    }\n    if (node.right) traverse(node.right);\n  };\n  traverse(tree.root);\n  return visited;\n}\n")])])]),e("p",[t._v("广度优先")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("function mapDom(tree) {\n  let visited = [];\n  let queue = [];\n  queue.push(tree.root);\n\n  while (queue.length) {\n    let current = queue.shift();\n    if (!visited.contains(current)) {\n      visited.push(current);\n    }\n    if (current.left) {\n      queue.push(current.left);\n    }\n    if (current.right) {\n      queue.push(current.right);\n    }\n  }\n  return visited;\n}\n")])])]),e("h3",{attrs:{id:"flex-是哪三个属性简写"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-是哪三个属性简写"}},[t._v("#")]),t._v(" flex 是哪三个属性简写")]),t._v(" "),e("p",[t._v("flex-grow 定义项目的放大比例，默认为 0(即使有空间也不放大)")]),t._v(" "),e("p",[t._v("flex-shrink 定义项目的缩小比例，默认为 1(空间不足时自动缩小)")]),t._v(" "),e("p",[t._v("flex-basis 定义项目初始宽度，默认为 auto(项目本来大小)")]),t._v(" "),e("h3",{attrs:{id:"用-css-实现朝上的红色三角"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用-css-实现朝上的红色三角"}},[t._v("#")]),t._v(" 用 css 实现朝上的红色三角")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("div {\n  width: 0;\n  height: 0;\n  border: 2em solid transparent;\n  border-bottom-color: red;\n}\n")])])]),e("h3",{attrs:{id:"cdn-如何工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cdn-如何工作"}},[t._v("#")]),t._v(" cdn 如何工作")]),t._v(" "),e("p",[t._v("CDN 的全称是 Content Delivery Network，即内容分发网络。CDN 是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN 的关键技术主要有内容存储和分发技术。")]),t._v(" "),e("h3",{attrs:{id:"选择器的权重"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选择器的权重"}},[t._v("#")]),t._v(" 选择器的权重")]),t._v(" "),e("p",[t._v("!important 最高")]),t._v(" "),e("p",[t._v("内联样式 权值 1000")]),t._v(" "),e("p",[t._v("#id 权值 100")]),t._v(" "),e("p",[t._v("类、伪类选择器 权值 10")]),t._v(" "),e("p",[t._v("元素、伪元素选择器 权值为 1")]),t._v(" "),e("p",[t._v("通配符(*)、子选择器(>)、相邻选择器 权值 0")]),t._v(" "),e("p",[t._v("继承样式没有权值")]),t._v(" "),e("blockquote",[e("p",[t._v("11 个类选择器虽然权值之和大于一个 id 选择器，但是浏览器还是优先解析 id 选择器")])]),t._v(" "),e("h3",{attrs:{id:"设置宽高为-100px-的盒子-包括哪些内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置宽高为-100px-的盒子-包括哪些内容"}},[t._v("#")]),t._v(" 设置宽高为 100px 的盒子，包括哪些内容")]),t._v(" "),e("p",[t._v("box-sizing 有三个属性")]),t._v(" "),e("p",[t._v("content-box(默认盒子)，height 和 width 设置的是内容的宽高，实际盒子宽度=左右 border+左右 padding+width")]),t._v(" "),e("p",[t._v("border-box，height 和 width 包括了的内容、内边距和边框，实际盒子宽度=width")]),t._v(" "),e("h3",{attrs:{id:"浏览器兼容性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性"}},[t._v("#")]),t._v(" 浏览器兼容性")]),t._v(" "),e("p",[t._v("使用厂商前缀")]),t._v(" "),e("p",[t._v("can i use 查看属性兼容性")]),t._v(" "),e("h3",{attrs:{id:"如何打破-promise-链"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何打破-promise-链"}},[t._v("#")]),t._v(" 如何打破 Promise 链")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('fetch("https://v1.hitokoto.co")\n  .then((res) => res.json())\n  .then((data) => console.log(data))\n  .catch((err) => console.log("错误"))\n  .then((res) => console.log("错误被捕获后, .then 执行了"))\n  .catch((err) => console.log("错误被捕获后, .catch 不执行"));\n')])])]),e("blockquote",[e("p",[t._v("上面代码输出如下")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("错误\n错误被捕获后, .then 执行了\n")])])]),e("p",[t._v("感觉没有答案...")]),t._v(" "),e("h3",{attrs:{id:"position-fixed-如何不相对于浏览器定位"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#position-fixed-如何不相对于浏览器定位"}},[t._v("#")]),t._v(" position:fixed 如何不相对于浏览器定位")]),t._v(" "),e("p",[t._v("给其祖先结点加上 transform 为非 none。")]),t._v(" "),e("h3",{attrs:{id:"cache-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[t._v("#")]),t._v(" cache-control")]),t._v(" "),e("p",[t._v("响应头")]),t._v(" "),e("p",[t._v("expires 过期时间(时间戳)，在这个时间内使用强缓存 单位：毫秒")]),t._v(" "),e("p",[t._v("cache-control 设置浏览器多长时间内再次请求会命中强缓存 单位：秒")]),t._v(" "),e("p",[t._v("-no-cache 不使用本地缓存")]),t._v(" "),e("p",[t._v("-no-store 禁止浏览器缓存")]),t._v(" "),e("p",[t._v("etag 第一次请求时，响应头包含该字段，第二次请求时，请求头的 If-None-Match 就是 etag 值，服务端拿到 etag，对比资源是否发生变化，若没有变化，返回 304")]),t._v(" "),e("p",[t._v("last-modified 第一次请求 URL 时，响应头包含该字段，标志文件在服务器最后被修改时间")]),t._v(" "),e("p",[t._v("If-Modified-Since 第二次请求 URL 时，请求头包含该字段，向服务器询问该文件是否修改，没有修改返回 304，直接从缓存读取。")]),t._v(" "),e("h3",{attrs:{id:"expires-和-cache-control-区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expires-和-cache-control-区别"}},[t._v("#")]),t._v(" expires 和 cache-control 区别：")]),t._v(" "),e("p",[t._v("expires 有一个缺陷，即要求服务端和客户端时间同步，如果不同步，假如服务器慢了，传给客户端的时间可能一直过期了。")]),t._v(" "),e("h3",{attrs:{id:"vue-nexttick-和-nodejs-nexttick"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-nexttick-和-nodejs-nexttick"}},[t._v("#")]),t._v(" Vue nextTick 和 nodejs nextTick")]),t._v(" "),e("p",[t._v("更改 dom 元素内部文本后，需要 dom 更新后才能获得更改后的内容。this.$nextTick()可以将回调延迟到下次 DOM 更新循环之后执行。")]),t._v(" "),e("h3",{attrs:{id:"nodejs-事件循环"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-事件循环"}},[t._v("#")]),t._v(" Nodejs 事件循环")]),t._v(" "),e("p",[t._v("NodeJS 将异步任务交给内核完成，在任务完成时，内核通知 NodeJS 将回调函数添加到轮询队列中等待时机执行。")]),t._v(" "),e("h3",{attrs:{id:"垂直居中"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#垂直居中"}},[t._v("#")]),t._v(" 垂直居中")]),t._v(" "),e("h3",{attrs:{id:"position-absolute-不设置-top、left-会怎样"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#position-absolute-不设置-top、left-会怎样"}},[t._v("#")]),t._v(" position:absolute 不设置 top、left 会怎样")]),t._v(" "),e("p",[t._v("保持正常文档流位置，但不占用空间")]),t._v(" "),e("h3",{attrs:{id:"get-和-post-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get-和-post-的区别"}},[t._v("#")]),t._v(" get 和 post 的区别")]),t._v(" "),e("ul",[e("li",[t._v("GET 将数据附在 URL 之后，POST 则是放在 HTTP 包中")]),t._v(" "),e("li",[t._v("GET 长度受到 url 长度限制，POST 没有大小限制")]),t._v(" "),e("li",[t._v("POST 安全性比 GET 高")]),t._v(" "),e("li",[t._v("GET 只允许 ASCII，POST 没有限制")]),t._v(" "),e("li",[t._v("GET 后退刷新无害，POST 重新提交表单")])]),t._v(" "),e("h3",{attrs:{id:"fetch-发送-2-次请求的原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fetch-发送-2-次请求的原因"}},[t._v("#")]),t._v(" fetch 发送 2 次请求的原因")]),t._v(" "),e("p",[t._v("fetch 发送 post 请求的时候，总是发送 2 次，第一次状态码是 204，第二次才成功？原因很简单，因为你用 fetch 发送 post 请求的时候，fetch 第一次发送了一个 Options 请求，询问服务器是否支持修改的请求头，如果服务器支持，则在第二次中发送真正的请求。")]),t._v(" "),e("h3",{attrs:{id:"js-垃圾回收机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-垃圾回收机制"}},[t._v("#")]),t._v(" js 垃圾回收机制")]),t._v(" "),e("p",[t._v("一般来说，没有被引用的对象就是垃圾，就是要被清除，有个例外如果有几个对象引用形成一个环，互相引用，但根访问不到他们，这几个对象也是垃圾。")]),t._v(" "),e("p",[t._v("如何检查垃圾")]),t._v(" "),e("p",[t._v("使用标记-清除算法")]),t._v(" "),e("h2",{attrs:{id:"二面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二面"}},[t._v("#")]),t._v(" 二面")]),t._v(" "),e("h3",{attrs:{id:"进程通信方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进程通信方式"}},[t._v("#")]),t._v(" 进程通信方式")]),t._v(" "),e("ul",[e("li",[t._v("管道通信")]),t._v(" "),e("li",[t._v("信号及信号量通信")]),t._v(" "),e("li",[t._v("共享内存")]),t._v(" "),e("li",[t._v("socket")])]),t._v(" "),e("p",[t._v("补充 Node 进程通信方式")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("通过 stdin/stdout 传递")])]),t._v(" "),e("li",[e("p",[t._v("Node 原生 IPC 支持")])]),t._v(" "),e("li",[e("p",[t._v("通过 sockets")])]),t._v(" "),e("li",[e("p",[t._v("借助 message queue")])])]),t._v(" "),e("h3",{attrs:{id:"如何防止盗链"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何防止盗链"}},[t._v("#")]),t._v(" 如何防止盗链")]),t._v(" "),e("p",[t._v("判断引用地址")]),t._v(" "),e("p",[t._v("请求头中包含 Referer 字段，如果这个字段的值是自己的域名，则响应请求，否则返回错误信息")]),t._v(" "),e("h3",{attrs:{id:"图片格式有哪些-webp-是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图片格式有哪些-webp-是什么"}},[t._v("#")]),t._v(" 图片格式有哪些？webp 是什么")]),t._v(" "),e("p",[t._v("bmp、jpg、png、gif、svg、webp")]),t._v(" "),e("p",[t._v("webp 是一种同时提供了有损压缩与无损压缩（可逆压缩）的图片文件格式。webp 可以在压缩的同时又不影响图片格式兼容与实际清晰度，进而让整体网页下载速度加快。")]),t._v(" "),e("h3",{attrs:{id:"git-命令有哪些-git-tag-是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-命令有哪些-git-tag-是什么"}},[t._v("#")]),t._v(" git 命令有哪些？git tag 是什么")]),t._v(" "),e("p",[e("code",[t._v("git tag <tagname>")]),t._v("基于最新提交创建标签")]),t._v(" "),e("h3",{attrs:{id:"如何撤销已提交的代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何撤销已提交的代码"}},[t._v("#")]),t._v(" 如何撤销已提交的代码")]),t._v(" "),e("p",[t._v("方法一")]),t._v(" "),e("p",[t._v("远程回退")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git push origin <commit_id>:<branch>\n")])])]),e("blockquote",[e("p",[e("code",[t._v("commit_id")]),t._v("可以通过"),e("code",[t._v("git log")]),t._v("查看，或者在直接从 github 网站上复制")])]),t._v(" "),e("p",[t._v("本地回退")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git reset --hard <commit_id>\n")])])]),e("p",[t._v("方法二")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git reset --hard <commit_id>\ngit push origin +<branch>\n")])])]),e("blockquote",[e("p",[t._v("注意版本号前面的"),e("code",[t._v("+")]),t._v(" ，它类似于"),e("code",[t._v("--force")]),t._v("，但略有不同，省略后提交会失败")])]),t._v(" "),e("h3",{attrs:{id:"nginx-有哪些配置项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx-有哪些配置项"}},[t._v("#")]),t._v(" Nginx 有哪些配置项")]),t._v(" "),e("p",[t._v("listen、server_name、location、root 等")]),t._v(" "),e("h3",{attrs:{id:"使用-shell-读取指定行或列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-shell-读取指定行或列"}},[t._v("#")]),t._v(" 使用 shell 读取指定行或列")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("sed -n '5,10p' /etc/passwd;\n")])])]),e("h3",{attrs:{id:"如果加载大量图片需要怎么做"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如果加载大量图片需要怎么做"}},[t._v("#")]),t._v(" 如果加载大量图片需要怎么做")]),t._v(" "),e("p",[t._v("懒加载、雪碧图")]),t._v(" "),e("h3",{attrs:{id:"雪碧图怎么实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#雪碧图怎么实现"}},[t._v("#")]),t._v(" 雪碧图怎么实现")]),t._v(" "),e("p",[t._v("将小图标和背景图像合并到一张图片上，然后利用 css 的背景定位来显示需要显示的图片部分")]),t._v(" "),e("h3",{attrs:{id:"正向代理和反向代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正向代理和反向代理"}},[t._v("#")]),t._v(" 正向代理和反向代理")]),t._v(" "),e("p",[t._v("正向代理：客户端将请求发送给代理服务器，再由代理服务器进行发送请求，获得的响应也通过这种方式。")]),t._v(" "),e("p",[t._v("反向代理：客户端发送请求后，请求被转发到服务端的某个端口")]),t._v(" "),e("h3",{attrs:{id:"大数相加"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#大数相加"}},[t._v("#")]),t._v(" 大数相加")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('function bigNumberSum(a, b) {\n  // 123456789\n  // 000009876\n\n  // padding\n  let cur = 0;\n  while (cur < a.length || cur < b.length) {\n    if (!a[cur]) {\n      a = "0" + a;\n    } else if (!b[cur]) {\n      b = "0" + b;\n    }\n    cur++;\n  }\n\n  let carried = 0;\n  const res = [];\n\n  for (let i = a.length - 1; i > -1; i--) {\n    const sum = carried + parseInt(a[i]) + parseInt(b[i]);\n    if (sum > 9) {\n      carried = 1;\n    } else {\n      carried = 0;\n    }\n    res[i] = sum % 10;\n  }\n  if (carried === 1) {\n    res.unshift(1);\n  }\n\n  return res.join("");\n}\nconsole.log(bigNumberSum("1122", "3344"));\n')])])]),e("h3",{attrs:{id:"实现一个时钟动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现一个时钟动画"}},[t._v("#")]),t._v(" 实现一个时钟动画")]),t._v(" "),e("p",[t._v("html")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<div class="clock-wrapper">\n  <div class="clock">\n    <div class="hour"></div>\n  </div>\n</div>\n')])])]),e("p",[t._v("css")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".clock-wrapper {\n  box-sizing: border-box;\n  height: 200px;\n  width: 200px;\n  padding: 2%;\n  background: #333;\n  border-radius: 50%;\n}\n.clock {\n  height: 100%;\n  width: 100%;\n  position: relative;\n}\n.clock div {\n  position: absolute;\n  height: 2px;\n  width: 50%;\n  background: white;\n  top: 50%;\n  left: 0;\n  transform: translateY(-50%);\n  transform-origin: 100%;\n  animation: rotate 60s infinite linear;\n}\n@keyframes rotate {\n  0% {\n    transform: translateY(-50%) rotate(0);\n  }\n  100% {\n    transform: translateY(-50%) rotate(360deg);\n  }\n}\n")])])]),e("p",[e("a",{attrs:{href:"https://imgchr.com/i/UY081S",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/20823417-382f529a05d111ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"UY081S.png"}}),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"三面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三面"}},[t._v("#")]),t._v(" 三面")]),t._v(" "),e("h3",{attrs:{id:"前几面的感受"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前几面的感受"}},[t._v("#")]),t._v(" 前几面的感受")]),t._v(" "),e("h3",{attrs:{id:"你觉得难的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#你觉得难的问题"}},[t._v("#")]),t._v(" 你觉得难的问题")]),t._v(" "),e("h3",{attrs:{id:"ajax-请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ajax-请求"}},[t._v("#")]),t._v(" ajax 请求")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('function ajax(url) {\n  const xhr = new XMLHttpRequest();\n  xhr.open("GET", url);\n  xhr.send();\n  xhr.onload = function () {\n    if (this.status === 200) {\n      console.log(this.response);\n    }\n  };\n}\n')])])]),e("h3",{attrs:{id:"发送-json-数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发送-json-数据"}},[t._v("#")]),t._v(" 发送 json 数据")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('function ajax(url, data) {\n  const xhr = new XMLHttpRequest();\n  xhr.open("POST", url, true);\n  xmlhttp.setRequestHeader("Content-Type", "application/json;charset=UTF-8");\n  xhr.send(JSON.stringify(data));\n  xhr.onload = function () {\n    if (this.status === 201) {\n      console.log(this.response);\n    }\n  };\n}\n')])])]),e("h3",{attrs:{id:"大数相乘"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#大数相乘"}},[t._v("#")]),t._v(" 大数相乘")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('let multiply = function (num1, num2) {\n  //判断输入是不是数字\n  if (isNaN(num1) || isNaN(num2)) return "";\n  let len1 = num1.length,\n    len2 = num2.length;\n  let ans = [];\n\n  //这里倒过来遍历很妙,不需要处理进位了\n  for (let i = len1 - 1; i <= 0; i--) {\n    for (let j = len2 - 1; j >= 0; j--) {\n      let index1 = i + j,\n        index2 = i + j + 1;\n      let mul = num1[i] * num2[j] + (ans[index2] || 0);\n      ans[index1] = Math.floor(mul / 10) + (ans[index1] || 0);\n      ans[index2] = mul % 10;\n    }\n  }\n\n  //去掉前置0\n  let result = ans.join("").replace(/^0+/, "");\n\n  //不要转成数字判断，否则可能会超精度！\n  return !result ? "0" : result;\n};\n')])])]),e("h3",{attrs:{id:"js-中多大的数称为大数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-中多大的数称为大数"}},[t._v("#")]),t._v(" js 中多大的数称为大数")]),t._v(" "),e("p",[t._v("超出"),e("code",[t._v("Number.MAX_VALUE")]),t._v("(1.7976931348623157e+308)")]),t._v(" "),e("h3",{attrs:{id:"http-响应码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-响应码"}},[t._v("#")]),t._v(" http 响应码")]),t._v(" "),e("p",[t._v("参考https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status")]),t._v(" "),e("h3",{attrs:{id:"对-ajax-请求进行-promise-封装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对-ajax-请求进行-promise-封装"}},[t._v("#")]),t._v(" 对 ajax 请求进行 promise 封装")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('function ajax(url) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open("GET", url);\n    xhr.send();\n    xhr.onreadystatechange = function () {\n      if (this.readyState == 4) {\n        if (this.status == 200) {\n          try {\n            let response = JSON.parse(this.responseText);\n            resolve(response);\n          } catch (e) {\n            reject(e);\n          }\n        } else {\n          reject(new Error(this.statusText));\n        }\n      }\n    };\n  });\n}\n')])])]),e("h3",{attrs:{id:"你有什么问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#你有什么问题"}},[t._v("#")]),t._v(" 你有什么问题")]),t._v(" "),e("p",[t._v("可以从岗位工作内容、对产品看法、以及某个技术问题回答")]),t._v(" "),e("h2",{attrs:{id:"面试感受"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#面试感受"}},[t._v("#")]),t._v(" 面试感受")]),t._v(" "),e("h3",{attrs:{id:"面试前准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#面试前准备"}},[t._v("#")]),t._v(" 面试前准备")]),t._v(" "),e("h4",{attrs:{id:"心理准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#心理准备"}},[t._v("#")]),t._v(" 心理准备")]),t._v(" "),e("p",[t._v("面试官大部分年纪都不大，没有那种咄咄逼人的感觉，大多数都以平等的姿态和你沟通，所以不必要太紧张。")]),t._v(" "),e("h4",{attrs:{id:"知识储备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#知识储备"}},[t._v("#")]),t._v(" 知识储备")]),t._v(" "),e("ul",[e("li",[t._v("面经")]),t._v(" "),e("li",[t._v("算法题")]),t._v(" "),e("li",[t._v("前端基础知识(JS、CSS、Vue/React)")]),t._v(" "),e("li",[t._v("项目经历")])]),t._v(" "),e("p",[t._v("以上内容除了最后一个都可以在牛客网找到")]),t._v(" "),e("h3",{attrs:{id:"面试问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#面试问题"}},[t._v("#")]),t._v(" 面试问题")]),t._v(" "),e("p",[t._v("如果是应届生，字节面试会以考察计算机基础(计算机网络、操作系统、数据结构)为主，应该好好复习这一块知识，笔者以为只会考察网络，结果二面时问了许多操作系统，就没答上来，本来以为二面就凉了，后来还是收到三面通知，这是让我比较意外的。字节大多数技术岗位都重视算法，前端面试算法虽然不会太难，但会考察各类经典题型的变种，所以光靠熟悉各种经典题型是不够的，还要掌握一类题的解题思路。")]),t._v(" "),e("h3",{attrs:{id:"最后想说的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最后想说的"}},[t._v("#")]),t._v(" 最后想说的")]),t._v(" "),e("p",[t._v("每一轮面试完后，如果几个小时内没有人联系你，最好打电话问一下面试结果，即使没有出结果，也可以加深面试官对你的印象，让人觉得你很重视这份工作。字节面试结果一般出的比较快，如果能力强的，面试完当天 oc 的也有，笔者属于比较菜的，三轮面试完后了无音讯，七天后成了凉面。")])])}),[],!1,null,null,null);a.default=r.exports}}]);